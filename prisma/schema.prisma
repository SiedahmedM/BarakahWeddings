generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?   // Add password field for hashed passwords
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  vendor        Vendor?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Vendor {
  id               String   @id @default(cuid())
  userId           String   @unique
  businessName     String
  description      String?  @db.Text
  category         VendorCategory
  phone            String
  whatsapp         String?
  email            String
  website          String?
  address          String?
  city             String
  state            String
  priceRange       PriceRange
  islamicCompliances Json?
  
  // Essential business information
  yearsInBusiness  String?
  serviceAreas     Json?    // Array of service areas
  maxCapacity      String?
  minCapacity      String?
  eventTypes       Json?    // Array of event types
  businessHours    Json?    // Object with business hours for each day
  paymentMethods   Json?    // Array of payment methods
  portfolioUrl     String?
  workSampleUrls   Json?    // Array of uploaded work sample URLs
  
  subscriptionActive Boolean @default(true)
  verified         Boolean @default(false)
  verificationStatus VerificationStatus @default(PENDING)
  verificationNotes String? @db.Text
  verifiedAt       DateTime?
  verifiedBy       String?
  rating           Float?
  reviewCount      Int     @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  photos       VendorPhoto[]
  reviews      Review[]
  quoteRequests QuoteRequest[]
}

model VendorPhoto {
  id        String   @id @default(cuid())
  vendorId  String
  url       String
  alt       String?
  isMain    Boolean  @default(false)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  
  vendor    Vendor   @relation(fields: [vendorId], references: [id], onDelete: Cascade)
}

model Review {
  id                    String   @id @default(cuid())
  vendorId              String
  reviewerName          String
  reviewerEmail         String?
  rating                Int
  comment               String   @db.Text
  verifiedMuslimWedding Boolean  @default(false)
  approved              Boolean  @default(false)
  createdAt             DateTime @default(now())
  
  vendor                Vendor   @relation(fields: [vendorId], references: [id], onDelete: Cascade)
}

model QuoteRequest {
  id          String   @id @default(cuid())
  vendorId    String
  customerName String
  customerEmail String
  customerPhone String?
  eventDate   DateTime?
  message     String   @db.Text
  status      QuoteStatus @default(PENDING)
  createdAt   DateTime @default(now())
  
  vendor      Vendor   @relation(fields: [vendorId], references: [id], onDelete: Cascade)
}

enum VendorCategory {
  VENUES
  CATERERS
  PHOTOGRAPHERS
  VIDEOGRAPHERS
  FLORISTS
  BRIDAL
  NIKAH_OFFICIANTS
  HAIR_MAKEUP
  JEWELRY
  DECORATIONS
  TRANSPORTATION
  ENTERTAINMENT
}

enum PriceRange {
  BUDGET        // $
  MODERATE      // $$
  LUXURY        // $$$
  ULTRA_LUXURY  // $$$$
}

enum QuoteStatus {
  PENDING
  RESPONDED
  CLOSED
}

enum VerificationStatus {
  PENDING
  UNDER_REVIEW
  APPROVED
  REJECTED
  SUSPENDED
}